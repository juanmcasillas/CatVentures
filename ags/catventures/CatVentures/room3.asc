// room script file

bool BoxInPlace=false;
bool FirstEnter=true;

// variables live during  the live of the game, so we can manage the gamestate here.

function room_FirstLoad()
{
// room 1, door 02 = 1 (note that there are... 0..98    
Doors.InitObject(1, oDoor1.ID); 
// go to VerbGUI.VariableExtensions() and add the code!

}

function room_Load()
{
cDoorClosed.Transparency = 100; // talking door invisible  
  
if (FirstEnter) {
  oDoor1.Visible = true;
} else { 
  int dState = Doors.GetDoorState(1);
  if (dState == 1) {
    oDoor1.Visible = true;
  }
  else {
    oDoor1.Visible = false;
  }
}
}

function room_AfterFadeIn()
{
if (FirstEnter) {
  
  #ifndef CAT_NOINTRO
  Wait(GetGameSpeed() * 2); // 3 seconds
  oDoor1.Visible = false;
  aDoorSlam.Play();  
  cDoorClosed.Say("*POM*");


  player.Say("What a nap! what's that sound?");
  FadeOut(10);
  
  player.Move(110,140, eBlock, eAnywhere);
  CatGame.SetNormalView(player);
  player.FaceDirection(eDirectionDown);
  FadeIn(10);

  #endif
  #ifdef CAT_NOINTRO
    oDoor1.Visible = false;
  #endif

  Doors.SetDoorState(1, 2);
  CatGame.EnablePlayersGUI ();
  Verbs.EnableGui ();
  gMain.Visible = true;
  mouse.Visible = true;
  FirstEnter = false;

// game starts here
}


}

function hWindow1_AnyClick()
{
  if (Verbs.UsedAction(eGA_WalkTo)){
    if (Verbs.GoTo() &&(oBox.X < 100)) {
      player.Walk(100, 118, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionUp);
      Wait(10);
      if (player.InventoryQuantity[iKeys.ID] < 1) {
        player.Say("I forget something");
        return;
      }
      else {
        player.ChangeRoom(1, 90, 135, eDirectionDown);
      }
    }
  }
  else if (Verbs.UsedAction(eGA_LookAt)) {
      player.Say("The window is open. Shows the alley.");
  }
  else Verbs.Unhandled();
}

function oBox_AnyClick()
{
  if (Verbs.UsedAction(eGA_LookAt)) {
    
      player.Walk(oBox.X-10, player.y, eBlock, eWalkableAreas);
      player.Say("The most  beautiful cardboard box in the world. I like boxes");
  }
  else if (Verbs.UsedAction(eGA_Pull) && (!BoxInPlace)) {  

      player.Walk(oBox.X-30, oBox.Y-30, eBlock, eWalkableAreas); // cEgo speed 4  delay 5
      player.FaceDirection(eDirectionRight);
      CatGame.SetNormalView(player, 1); // pull view
      Wait(10);
      player.Walk(70, player.y, eNoBlock, eWalkableAreas); 
      aDrag.Play();
      oBox.Move(90, oBox.Y, -2, eBlock, eAnywhere); // Box speed 1
      CatGame.SetNormalView(player);
      player.FaceDirection(eDirectionRight);
      BoxInPlace = true;
    //
  }
  else Verbs.Unhandled();
}


function oKeys_AnyClick()
{
  if (Verbs.UsedAction(eGA_LookAt)) {
      player.Walk(oKeys.X-10, player.y, eBlock, eWalkableAreas);
      player.Say("A keyring with two keys.");
  }
  else if (Verbs.UsedAction(eGA_PickUp)) {  
      Verbs.AnyClickWalkLookPick(oKeys.X-10, player.y, eDirectionRight, "Better I take that", oKeys.ID, iKeys, aKeyPick);
      //aKeyPick.Play();
      //player.Walk(, eBlock, eWalkableAreas);
      //oKeys.Visible=false;
      //player.AddInventory(iKeys);
  }
  else Verbs.Unhandled();
}
function hScratch_AnyClick()
{
  if (Verbs.UsedAction(eGA_WalkTo)) {
    Verbs.GoTo();
  }
  else if(Verbs.UsedAction(eGA_LookAt)) {
      player.Say("The NAP maker.");
  }
  else Verbs.Unhandled();
}

function hDoor1_AnyClick() {
// Door, Object.ID, WalkToHotSpot, FaceHotSpot, RoomIDtoGo, CoordsInRoomToGo, FacingInNewRoom)

 if(Verbs.UsedAction(eGA_WalkTo)) {
    Verbs.MovePlayer(43,135);
 }

 if (player.ActiveInventory == iKeys && FirstEnter) {
  Verbs.MovePlayer(43, 135);
  player.FaceDirection(eDirectionLeft);
  player.Say("This keys doesn't work on this lock");
 }   
 //else if (Doors.AnyClick(1, oDoor1.ID, 35, 135, eDirectionLeft, 1, 280, 140, eDirectionLeft)==0) Verbs.Unhandled();
 // to allow sounds here
 else if (Doors.AnyClickSpecial(1, oDoor1.ID, 43, 135, eDirectionLeft, 1, 256, 135, eDirectionLeft, aDoorOpen,  aDoorClose, 0, 0  )==0) Verbs.Unhandled();

}