// room script file

bool BoxInPlace=false;
// variables live during  the live of the game, so we can manage the gamestate here.

function hDoor1_AnyClick() {
// Door, Object.ID, WalkToHotSpot, FaceHotSpot, RoomIDtoGo, CoordsInRoomToGo, FacingInNewRoom)

 if (player.ActiveInventory == iKeys && CatGame.GAME_STATE==0) {
  player.Walk(43, 135, eBlock, eWalkableAreas);
  player.FaceDirection(eDirectionLeft);
  player.Say("This keys doesn't work on this lock");
 }   
 else if (Doors.AnyClick(1, oDoor1.ID, 35, 135, eDirectionLeft, 1, 280, 140, eDirectionLeft)==0) Verbs.Unhandled();

}

function room_FirstLoad()
{
// room 1, door 02 = 1 (note that there are... 0..98    
Doors.InitObject(1, oDoor1.ID); 

// go to VerbGUI.VariableExtensions() and add the code!

}

function room_Load()
{

if (CatGame.GAME_STATE==0) {
  oDoor1.Visible = true;
  cDoorClosed.Transparency = 100; // talking door invisible
  BoxInPlace=false;
} else { 
  int dState = Doors.GetDoorState(1);
  if (dState == 1) {
    oDoor1.Visible = true;
  }
  else {
    oDoor1.Visible = false;
  }
}


}

function room_AfterFadeIn()
{
if (CatGame.GAME_STATE==0) {
  Wait(GetGameSpeed() * 2); // 3 seconds
  oDoor1.Visible = false;
  cDoorClosed.Say("*POM*");


  player.Say("What a nap! what's that sound?");
  FadeOut(10);
  Doors.SetDoorState(1, 2);
  player.Move(110,140, eBlock, eAnywhere);
  CatGame.SetNormalView(player);
  player.FaceDirection(eDirectionDown);

  FadeIn(10);
  CatGame.EnablePlayersGUI ();
  Verbs.EnableGui ();
  gMain.Visible = true;
  mouse.Visible = true;
  CatGame.GAME_STATE = 1;
// game starts here
}
}

function hWindow1_AnyClick()
{
  if (Verbs.UsedAction(eGA_WalkTo) && (oBox.X < 100)) {
    player.Walk(100, 125, eBlock, eWalkableAreas);
    player.FaceDirection(eDirectionUp);
    player.ChangeRoom(1, 90, 135, eDirectionDown);
  }
  else if (Verbs.UsedAction(eGA_LookAt)) {
      player.Say("The window is open. Shows the alley.");
  }
  else Verbs.Unhandled();
}

function oBox_AnyClick()
{
  if (Verbs.UsedAction(eGA_LookAt)) {
      player.Walk(oBox.X-10, player.y, eBlock, eWalkableAreas);
      player.Say("The most  beautiful cardboard box in the world. I like boxes");
  }
  else if (Verbs.UsedAction(eGA_Pull) && (!BoxInPlace)) {  
      player.Walk(oBox.X-10, player.y, eBlock, eWalkableAreas); // cEgo speed 4  delay 5
      player.Walk(100, player.y, eNoBlock, eWalkableAreas); 
      oBox.Move(90, oBox.Y, 1, eBlock, eAnywhere); // Box speed 1
      BoxInPlace = true;
    //
  }
  else Verbs.Unhandled();
}


function oKeys_AnyClick()
{
  if (Verbs.UsedAction(eGA_LookAt)) {
      player.Walk(oKeys.X-10, player.y, eBlock, eWalkableAreas);
      player.Say("A keyring with two keys.");
  }
  else if (Verbs.UsedAction(eGA_PickUp)) {  
      Verbs.AnyClickWalkLookPick(oKeys.X-10, player.y, eDirectionRight, "Better I take that", oKeys.ID, iKeys);
      //player.Walk(, eBlock, eWalkableAreas);
      //oKeys.Visible=false;
      //player.AddInventory(iKeys);
  }
  else Verbs.Unhandled();
}